# -*- coding: utf-8 -*-
"""Matplotlib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-XospKdOMpJfV8erYxgbbLtFc9yRtf7m
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import matplotlib as mpl

plt.plot();

plt.plot()
plt.show()

plt.plot([1,2,3,4])
plt.show()

plt.plot([1,2,3,4],[4,2,5,10])
plt.show()

#1st method 
fig = plt.figure()  #creates figure
ax = fig.add_subplot()    #add some axis
plt.show()

# 3 method (recommended)
fig, ax = plt.subplots()
ax.plot([1,2,3,4],[4,5,8,3]);

"""# Matplotlib example workflow"""

x = [1,2,3,4]
y = [11,22,33,44]

fig, ax  = plt.subplots(figsize=(10,10))

#plot data
ax.plot(x,y)

#Customize plot
ax.set(title = "Simple Plot",
       xlabel = "x-axis",
       ylabel = "y-axis")



"""# Making figures with Numpy arrays"""

x = np.linspace(0,10,100)
x[:10]

fig, ax = plt.subplots()
ax.plot(x, x**2, 'g^')           #line plot

fig,ax = plt.subplots()
ax.scatter(x, np.exp(x))       #scatter plot

fig , ax = plt.subplots()
ax.scatter(x, np.sin(x))          #scatter

#plot from dictionary

dict1 = {"Almond Butter":10, "Peanut Butter": 8, "Cashew Butter":12}

fig , ax = plt.subplots()
ax.bar(dict1.keys(), dict1.values())          #barplot

ax.set(title = "Plot from Dictionary",
       ylabel = "Prices ($)");

fig , ax = plt.subplots()
ax.barh(list(dict1.keys()), list(dict1.values()));

x = np.random.randn(1000)
fig, ax = plt.subplots()
ax.hist(x);         #histogram

#options for creating subplots

fig , ((ax1,ax2),(ax3,ax4)) = plt.subplots(nrows = 2, ncols = 2, figsize = (10,5))
ax1.plot(x, x/2)
ax2.scatter(np.random.random(10), np.random.random(10))
ax3.bar(dict1.keys(), dict1.values())
ax4.hist(np.random.randn(1000));

#option 2

fig, ax = plt.subplots(nrows = 2, ncols = 2 , figsize = (10,5))
ax[0,0].plot(x,x/2)
ax[0,1].scatter(np.random.random(10), np.random.random(10))
ax[1,0].bar(dict1.keys(), dict1.values())
ax[1,1].hist(np.random.randn(1000));

from google.colab import drive
drive.mount('/content/drive/')

car_sales = pd.read_csv("/content/drive/MyDrive/ai_dataset/car-sales.csv")
car_sales

ts = pd.Series(np.random.randn(1000), index=pd.date_range("11/06/2022", periods=1000))
ts = ts.cumsum()
ts.plot();

car_sales

car_sales['Price'] = car_sales['Price'].str.replace('[\$\,\.]','')             #remove $from price and convert it into string
car_sales

car_sales['Price'] = car_sales['Price'].str[:-2]          #remove last two zeros
car_sales

car_sales['Sale Date'] = pd.date_range('11/06/2022', periods = len(car_sales))
car_sales

car_sales['Total Sales'] = car_sales['Price'].astype(int).cumsum()               #adds value in cumulative sum
car_sales

car_sales.plot(x = 'Sale Date', y = 'Total Sales')

car_sales.plot.scatter(x = 'Odometer (KM)', y ='Price');

x = np.random.rand(10,4)
x

df = pd.DataFrame(x, columns=['a','b','c','d'])
df

df.plot.bar()

df.plot(kind = 'bar')

car_sales.plot(x = 'Make', y ='Odometer (KM)', kind = 'bar');

car_sales['Odometer (KM)'].plot.hist();

car_sales["Odometer (KM)"].plot(kind = 'hist');

car_sales["Odometer (KM)"].plot.hist(bins = 20);

car_sales["Odometer (KM)"].plot.hist(bins = 10);

heart_disease = pd.read_csv("heart-disease.csv")
heart_disease.head()

heart_disease['age'].plot.hist();

#all the columns in one histogram 
heart_disease.plot.hist(figsize = (10,30),subplots = True);

heart_disease.head()

over_50 = heart_disease[heart_disease['age']>50]
over_50.head()

over_50.plot(kind = 'scatter', x = 'age', y = 'chol', c = 'target', figsize = (10,6));          #c is for color

fig, ax = plt.subplots(figsize = (10,6))
heart_disease.plot(kind = 'scatter', x = 'age', y = 'chol' , c = 'target' , ax =ax);

#ax.set_xlim([45,100])               #set the limitation on axis

# oo method from scratch

fig, ax = plt.subplots(figsize = (10,6))

scatter = ax.scatter(x = over_50['age'], y = over_50['chol'], c = over_50['target'])

#customize the plot
ax.set(title = "Heart Disease and Cholestrol Level" , xlabel = 'age', ylabel = 'cholestrol')

#add the legend 
ax.legend(*scatter.legend_elements(), title = 'Target')            #scatter hre is variable name

#add a horizontal line
ax.axhline(over_50['chol'].mean(), linestyle = '--');

#subplots of age, chol, thalach

fig, (ax0, ax1) = plt.subplots(nrows = 2, ncols = 1, figsize = (10,10));

#add data to axes
scatter = ax0.scatter(x = over_50['age'], y = over_50['chol'], c = over_50['target']);

ax0.set(title = "Heart Disease and Cholestrol Level" , xlabel = 'age', ylabel = 'cholestrol')

ax0.legend(*scatter.legend_elements(), title = 'Target')


ax0.axhline(over_50['chol'].mean(), linestyle = '--');

# add data to ax1
scatter = ax1.scatter(x = over_50['age'], y = over_50['thalach'], c = over_50['target'])

ax1.set(title = 'Heart Disease and Thalach', xlabel = 'age' , ylabel = 'thalach')

ax1.legend(*scatter.legend_elements(), title = 'Target')

ax1.axhline(over_50['thalach'].mean(), linestyle = '--');

fig.suptitle('Heart Disease Analysis', fontsize = 16, fontweight = 'bold');

plt.style.available

car_sales['Odometer (KM)'].plot();

car_sales

plt.style.use('seaborn-whitegrid')

car_sales['Odometer (KM)'].plot();

plt.style.use('seaborn')

car_sales['Odometer (KM)'].plot();

plt.style.use('ggplot')

car_sales['Odometer (KM)'].plot();

x = np.random.rand(10,4)
x

df = pd.DataFrame(x , columns = ['a','b','c','d'])
df

ax = df.plot(kind = 'bar')
type(ax)

plt.style.use('seaborn-whitegrid')

#subplots of age, chol, thalach

fig, (ax0, ax1) = plt.subplots(nrows = 2, ncols = 1, figsize = (10,10));

#add data to axes
scatter = ax0.scatter(x = over_50['age'], y = over_50['chol'], c = over_50['target'],
                      cmap = 'winter');        #changes color scheme

ax0.set(title = "Heart Disease and Cholestrol Level" , xlabel = 'age', ylabel = 'cholestrol')
ax0.set_xlim([50,80])
ax0.legend(*scatter.legend_elements(), title = 'Target')


ax0.axhline(over_50['chol'].mean(), linestyle = '--');

# add data to ax1
scatter = ax1.scatter(x = over_50['age'], y = over_50['thalach'], c = over_50['target'],
                      cmap = 'summer')

ax1.set(title = 'Heart Disease and Thalach', xlabel = 'age' , ylabel = 'thalach')
ax1.set_xlim([50,80])
ax1.set_ylim([60,200])
ax1.legend(*scatter.legend_elements(), title = 'Target')

ax1.axhline(over_50['thalach'].mean(), linestyle = '--');

fig.suptitle('Heart Disease Analysis', fontsize = 16, fontweight = 'bold');

